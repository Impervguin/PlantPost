package components

import (
    "PlantSite/internal/models/auth"
    "PlantSite/internal/services/search-service"
    "PlantSite/internal/view/layout"
	"strings"
)

const (
    FloatMinMaxNodeType = "float-min-max"
    IntMinMaxNodeType   = "int-min-max"
    StringNodeType      = "string"
    OptionNodeType      = "option"
)

type FloatMinMaxNode struct {
    Min float64
    Max float64
}

type IntMinMaxNode struct {
    Min int
    Max int
}

type StringNode struct {
    Default string
}

type OptionNode struct {
    LabelValuePairs []struct {
        Label string
        Value string
    }
}

var filterNodes = []struct {
    name       string
    label      string
    nodeType   string
    floatMinMax *FloatMinMaxNode
    intMinMax   *IntMinMaxNode
    string     *StringNode
    option     *OptionNode
}{
    {
        name:     "name",
        label:    "Name",
        nodeType: StringNodeType,
        string: &StringNode{
            Default: "",
        },
    },
    {
        name:     "latin-name",
        label:    "Latin Name",
        nodeType: StringNodeType,
        string: &StringNode{
            Default: "",
        },
    },
    {
        name:     "height",
        label:    "Height",
        nodeType: FloatMinMaxNodeType,
        floatMinMax: &FloatMinMaxNode{
            Min: 0,
            Max: 1000, // Assuming a reasonable max height
        },
    },
    {
        name: "diameter",
        label: "Diameter",
        nodeType: FloatMinMaxNodeType,
        floatMinMax: &FloatMinMaxNode{
            Min: 0,
            Max: 1000, // Assuming a reasonable max diameter
        },
    },
    {
        name: "category",
        label: "Category",
        nodeType: OptionNodeType,
        option: &OptionNode{
            LabelValuePairs: []struct {
                Label string
                Value string
            }{
                {
                    Label: "Coniferous",
                    Value: "coniferous",
                },
                {
                    Label: "Deciduous",
                    Value: "deciduous",
                },
            },
        },
    },
    {
        name:     "soil-type",
        label:    "Soil Type",
        nodeType: OptionNodeType,
        option: &OptionNode{
            LabelValuePairs: []struct {
                Label string
                Value string
            } {
                {
                    Label: "Light",
                    Value: "light",
                },
                {
                    Label: "Medium",
                    Value: "medium",
                },
                {
                    Label: "Heavy",
                    Value: "heavy",
                },
            },
        },
    },
    {
        name:     "soil-acidity",
        label:    "Soil Acidity",
        nodeType: IntMinMaxNodeType,
        intMinMax: &IntMinMaxNode{
            Min: 0,
            Max: 100,
        },
    },
    {
        name:     "soil-moisture",
        label:    "Soil Moisture",
        nodeType: OptionNodeType,
        option: &OptionNode{
            LabelValuePairs: []struct {
                Label string
                Value string
            } {
                {
                    Label: "Dry",
                    Value: "dry",
                },
                {
                    Label: "Low",
                    Value: "low",
                },
                {
                    Label: "Medium",
                    Value: "medium",
                },
                {
                    Label: "High",
                    Value: "high",
                },
            },
        },
    },
    {
        name:     "light-relation",
        label:    "Light Relation",
        nodeType: OptionNodeType,
        option: &OptionNode{
            LabelValuePairs: []struct {
                Label string
                Value string
            }{
                {
                    Label: "Shadow",
                    Value: "shadow",
                },
                {
                    Label: "Half-Shadow",
                    Value: "halfshadow",
                },
                {
                    Label: "Light",
                    Value: "light",
                },
            },
        },
    },
    {
        name:     "winter-hardiness",
        label:    "Winter Hardiness",
        nodeType: IntMinMaxNodeType,
        intMinMax: &IntMinMaxNode{
            Min: 0,
            Max: 11,
        },
    },
    {
        name:     "flowering-period",
        label:    "Flowering Period",
        nodeType: OptionNodeType,
        option: &OptionNode{
            LabelValuePairs: []struct {
                Label string
                Value string
            } {
                {
                    Label: "Spring",
                    Value: "spring",
                },
                {
                    Label: "Summer",
                    Value: "summer",
                },
                {
                    Label: "Autumn",
                    Value: "autumn",
                },
                {
                    Label: "Winter",
                    Value: "winter",
                },
                {
                    Label: "January",
                    Value: "january",
                },
                {
                    Label: "February",
                    Value: "february",
                },
                {
                    Label: "March",
                    Value: "march",
                },
                {
                    Label: "April",
                    Value: "april",
                },
                {
                    Label: "May",
                    Value: "may",
                },
                {
                    Label: "June",
                    Value: "june",
                },
                {
                    Label: "July",
                    Value: "july",
                },
                {
                    Label: "August",
                    Value: "august",
                },
                {
                    Label: "September",
                    Value: "september",
                },
                {
                    Label: "October",
                    Value: "october",
                },
                {
                    Label: "November",
                    Value: "november",
                },
                {
                    Label: "December",
                    Value: "december",
                },
            },
        },
    },
}



templ Plants(usr auth.User, plants []*searchservice.SearchPlant) {
    @layout.Standard(usr) {
        <script src="/static/js/plants/listener.js" type="module"></script>
        <script src="/static/js/plants/buttons.js" type="module"></script>
        <div class="bg-white">
            <div>
                <main class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
                    <div class="flex items-baseline justify-between border-b border-gray-200 pt-24 pb-6">
                        <h1 class="text-4xl font-bold tracking-tight text-gray-900">Plants</h1>
                    </div>
                    <section aria-labelledby="products-heading" class="pt-6 pb-24">
                        <h2 id="products-heading" class="sr-only">Products</h2>

                        <div class="grid grid-cols-1 gap-x-8 gap-y-10 lg:grid-cols-4">
                            <!-- Filters -->
                            <form class="hidden lg:block search-filters">
                                for _, filter := range filterNodes {
                                    <!-- Button to open/close filter section -->
                                    <div class="border-b border-gray-200 py-6">
                                        <h3 class="-my-3 flow-root">
                                            <button type="button" class="filter-close-open flex w-full items-center justify-between bg-white py-3 text-sm text-gray-400 hover:text-gray-500" aria-controls={"filter-section-"+filter.name} aria-expanded="false">
                                                <span class="font-medium text-gray-900">{filter.label}</span>
                                                <span class="ml-6 flex items-center">
                                                    <svg class="size-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
                                                        <path d="M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z" />
                                                    </svg>
                                                    <svg class="size-5 hidden" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
                                                        <path fill-rule="evenodd" d="M4 10a.75.75 0 0 1 .75-.75h10.5a.75.75 0 0 1 0 1.5H4.75A.75.75 0 0 1 4 10Z" clip-rule="evenodd" />
                                                    </svg>
                                                </span>
                                            </button>
                                        </h3>
                                        <!-- Filter section -->
                                        <div class="pt-6 hidden" id={"filter-section-"+filter.name}>
                                            <div class="space-y-4">
                                                switch filter.nodeType {
                                                    case StringNodeType:
                                                        <div class="flex gap-3">
                                                            <input 
                                                                type="text" 
                                                                name={filter.name} 
                                                                id={filter.name}
                                                                value={filter.string.Default} 
                                                                class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                                                            />
                                                        </div>
                                                    case FloatMinMaxNodeType:
                                                        <div class="flex gap-4">
                                                            <div class="flex-1">
                                                                <label for={filter.name+"-min"} class="block text-sm font-medium text-gray-700">Min</label>
                                                                <input 
                                                                    type="number" 
                                                                    id={filter.name+"-min"} 
                                                                    name={filter.name+"-min"} 
                                                                    min={filter.floatMinMax.Min} 
                                                                    max={filter.floatMinMax.Max} 
                                                                    class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                                                                />
                                                            </div>
                                                            <div class="flex-1">
                                                                <label for={filter.name+"-max"} class="block text-sm font-medium text-gray-700">Max</label>
                                                                <input 
                                                                    type="number" 
                                                                    id={filter.name+"-max"} 
                                                                    name={filter.name+"-max"} 
                                                                    min={filter.floatMinMax.Min} 
                                                                    max={filter.floatMinMax.Max} 
                                                                    class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                                                                />
                                                            </div>
                                                        </div>
                                                    case IntMinMaxNodeType:
                                                        <div class="flex gap-4">
                                                            <div class="flex-1">
                                                                <label for={filter.name+"-min"} class="block text-sm font-medium text-gray-700">Min</label>
                                                                <input 
                                                                    type="number" 
                                                                    id={filter.name+"-min"} 
                                                                    name={filter.name+"-min"} 
                                                                    min={filter.intMinMax.Min} 
                                                                    max={filter.intMinMax.Max} 
                                                                    class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                                                                />
                                                            </div>
                                                            <div class="flex-1">
                                                                <label for={filter.name+"-max"} class="block text-sm font-medium text-gray-700">Max</label>
                                                                <input 
                                                                    type="number" 
                                                                    step="1"
                                                                    id={filter.name+"-max"} 
                                                                    name={filter.name+"-max"} 
                                                                    min={filter.intMinMax.Min} 
                                                                    max={filter.intMinMax.Max} 
                                                                    class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                                                                />
                                                            </div>
                                                        </div>
                                                    case OptionNodeType:
                                                        for _, option := range filter.option.LabelValuePairs {
                                                            <div class="flex gap-3">
                                                                <div class="flex h-5 shrink-0 items-center">
                                                                    <div class="group grid size-4 grid-cols-1">
                                                                        <input 
                                                                            id={filter.name+"-"+strings.ToLower(option.Label)}
                                                                            name={filter.name+"[]"}
                                                                            value={option.Value} 
                                                                            type="checkbox" 
                                                                            class="col-start-1 row-start-1 appearance-none rounded-sm border border-gray-300 bg-white checked:border-amber-500 checked:bg-amber-500 indeterminate:border-amber-500 indeterminate:bg-amber-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-amber-500 disabled:border-gray-300 disabled:bg-gray-100 disabled:checked:bg-gray-100 forced-colors:appearance-auto"
                                                                        />
                                                                        <svg class="pointer-events-none col-start-1 row-start-1 size-3.5 self-center justify-self-center stroke-white group-has-disabled:stroke-gray-950/25" viewBox="0 0 14 14" fill="none">
                                                                            <path class="opacity-0 group-has-checked:opacity-100" d="M3 8L6 11L11 3.5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                                            <path class="opacity-0 group-has-indeterminate:opacity-100" d="M3 7H11" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                                        </svg>
                                                                    </div>
                                                                </div>
                                                                <label for={"filter-"+filter.name+"-"+option.Label} class="text-sm text-gray-600">{option.Label}</label>
                                                            </div>
                                                        }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="mt-4">
                                    <button 
                                        id="search-button" 
                                        type="button" 
                                        class="w-full rounded-md bg-amber-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-amber-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                                    >
                                        Search
                                    </button>
                                </div>
                            </form>

                            <div class="lg:col-span-3">
                                <div class="grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-3">
                                for _, plnt := range plants {
                                    <a href={templ.SafeURL("/view/plant/" + plnt.ID.String())} class="group">
                                        <img src={plnt.MainPhoto.URL} alt="Tall slender porcelain bottle with natural clay textured body and cork stopper." class="aspect-square w-full rounded-lg bg-gray-200 object-cover group-hover:opacity-75 xl:aspect-7/8">
                                        <p class="mt-1 text-lg font-medium text-gray-900">{plnt.LatinName}</p>
                                        <h3 class="mt-4 text-sm text-gray-700">{plnt.Name}</h3>
                                        <p class="mt-1 text-sm font-medium text-gray-900">{plnt.Category}</p>

                                    </a>
                                }
                                </div>
                            </div>
                        </div>
                    </section>
                </main>
            </div>
        </div>
    }
}