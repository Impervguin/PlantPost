package components

import (
	"PlantSite/internal/models/auth"
    "PlantSite/internal/utils/stringutils"
	"PlantSite/internal/services/search-service"
	"PlantSite/internal/view/layout"
    "strings"
	"github.com/google/uuid"
	"fmt"
)

templ postFilterHeader(title string, name string) {
    <h3 class="-my-3 flow-root">
        <button type="button" class="filter-close-open flex w-full items-center justify-between bg-white py-3 text-sm text-gray-400 hover:text-gray-500" aria-controls={"filter-section-"+name} aria-expanded="false">
            <span class="font-medium text-gray-900">{title}</span>
            <span class="ml-6 flex items-center">
                <svg class="size-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
                    <path d="M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z" />
                </svg>
                <svg class="size-5 hidden" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
                    <path fill-rule="evenodd" d="M4 10a.75.75 0 0 1 .75-.75h10.5a.75.75 0 0 1 0 1.5H4.75A.75.75 0 0 1 4 10Z" clip-rule="evenodd" />
                </svg>
            </span>
        </button>
    </h3>
}

templ WithPlantContent(lineClass, contentClass, hrefClass string, content string, plantMap map[uuid.UUID]*searchservice.SearchPlant) {
    {{ content = stringutils.ReplaceFunc(content, "\\plant{%s}", func(match string) string {
        plntID, err := uuid.Parse(match)
        if err != nil {
            return match
        }
        if plant, ok := plantMap[plntID]; ok {
            return fmt.Sprintf(`<a class=%s href="/view/plant/%s">%s</a>` , hrefClass, plant.ID.String(), plant.Name)
        }
        return "not found"
    })}}
    {{ lines := strings.Split(content, "\n") }}
    <div class={lineClass}>
    for _, line := range lines {
        <p>@templ.Raw(line)</p>
    }
    </div>
}


templ Posts(usr auth.User, posts []*searchservice.SearchPost, tags []string, authors []*auth.Author, plantMap map[uuid.UUID]*searchservice.SearchPlant) {
    @layout.Standard(usr) {
        <script src="/static/js/posts/buttons.js" type="module"></script>
        <script src="/static/js/posts/listener.js" type="module"></script>
        <div class="bg-white">
            <div>
                <main class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
                    <div class="flex items-baseline justify-between border-b border-gray-200 pt-24 pb-6">
                        <h1 class="text-4xl font-bold tracking-tight text-gray-900">Posts</h1>
                    </div>

                        <div class="grid grid-cols-1 gap-x-8 gap-y-10 lg:grid-cols-4">
                            <!-- Filters -->
                            <form id="search-filters" class="hidden lg:block search-filters">
                                    <!-- Button to open/close filter section -->
                                    <div class="border-b border-gray-200 py-6">
                                        @postFilterHeader("Title", "title")
                                        <!-- Filter section -->
                                        <div class="pt-6 hidden" id="filter-section-title">
                                            <div class="space-y-4">
                                                <input
                                                    type="text"
                                                    name="title"
                                                    id="title"
                                                    value=""
                                                    class="block w-full rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-amber-600 sm:text-sm sm:leading-6"
                                                    />  
                                            </div>
                                        </div>
                                    </div>
                                    <div class="border-b border-gray-200 py-6">
                                        @postFilterHeader("Tags", "tags")
                                        <div id="filter-section-tags" class="max-h-60 overflow-y-auto hidden">
                                            for _, tag := range tags {
                                                <div class="flex gap-3">
                                                    <div class="flex h-5 shrink-0 items-center">
                                                        <div class="group grid size-4 grid-cols-1">
                                                            <input 
                                                                id={"tags-"+tag}
                                                                name="tags[]"
                                                                value={tag}
                                                                type="checkbox" 
                                                                class="col-start-1 row-start-1 appearance-none rounded-sm border border-gray-300 bg-white checked:border-amber-500 checked:bg-amber-500 indeterminate:border-amber-500 indeterminate:bg-amber-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-amber-500 disabled:border-gray-300 disabled:bg-gray-100 disabled:checked:bg-gray-100 forced-colors:appearance-auto"
                                                            />
                                                            <svg class="pointer-events-none col-start-1 row-start-1 size-3.5 self-center justify-self-center stroke-white group-has-disabled:stroke-gray-950/25" viewBox="0 0 14 14" fill="none">
                                                                <path class="opacity-0 group-has-checked:opacity-100" d="M3 8L6 11L11 3.5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                                <path class="opacity-0 group-has-indeterminate:opacity-100" d="M3 7H11" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                            </svg>
                                                        </div>
                                                    </div>
                                                    <label for={"tags-" + tag} class="text-sm text-gray-600">{tag}</label>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="border-b border-gray-200 py-6">
                                        @postFilterHeader("Authors", "author")
                                        <div id="filter-section-author" class="pt-6 hidden">
                                            <select id="author" name="author" required class="mt-1 py-2 px-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-amber-500 focus:ring-amber-500 sm:text-sm">
                                                <option value="">Select an author</option>
                                                for _, author := range authors {
                                                    <option value={author.ID().String()}>{author.Name()}</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                <div class="mt-4">
                                    <button 
                                        id="search-button" 
                                        type="button" 
                                        class="w-full rounded-md bg-amber-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-amber-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                                    >
                                        Search
                                    </button>
                                </div>
                                if usr.HasAuthorRights() {
                                <div class="mt-4">
                                    <a 
                                        id="create-button"
                                        href="/view/post/create"
                                        class="w-full rounded-md bg-emerald-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-emerald-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                                    >
                                        Create
                                    </a>
                                </div>
                                }
                            </form>

                            <div class="lg:col-span-3">
                                for _, post := range posts {
                                    <div class="mx-6 my-4">
                                        <a href={templ.URL("/view/post/" + post.ID.String())} class="group">
                                            if len(post.Photos) > 0 {
                                                <img src={templ.URL(post.Photos[0].File.URL)} class="aspect-square w-full rounded-lg bg-gray-200 object-cover group-hover:opacity-75 xl:aspect-7/8">
                                            }
                                            <p class="mt-1 text-xs font-medium text-gray-600">{post.CreatedAt.Format("January 2, 2006")}</p>
                                            <h3 class="mt-1 text-lg font-medium text-gray-900">{post.Title}</h3>
                                            @WithPlantContent("text-sm text-gray-600 line-clamp-3", "", "text-green-800", post.Content.Text, plantMap)
                                            for _, tag := range post.Tags {
                                                <span class="inline-flex items-center mx-1 rounded-full bg-green-50 px-2 py-1 text-xs font-medium text-green-700 ring-1 ring-inset ring-green-600/20">
                                                    {tag}
                                                </span>
                                            }
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                </main>
            </div>
        </div>
    }
}


templ PostView(usr auth.User, post *searchservice.GetPost, plants map[uuid.UUID]*searchservice.SearchPlant) {
    @layout.Standard(usr) {
        <script src="/static/js/post/delete-listener.js" type="module"></script>
        <div class="bg-white">
            <main class="mx-auto max-w-2xl px-4 py-16 sm:px-6 sm:py-24 lg:max-w-7xl lg:px-8">
                <div class="grid grid-cols-6">
                    if len(post.Photos) > 0 {
                    <div id="post-gallery" class="col-span-4 flex h-120 space-x-4 overflow-x-auto snap-x snap-mandatory w-full rounded-lg">
                        for _, photo := range post.Photos {
                        <div class="duration-300 ease-in-out hover:opacity-75 hover:scale-105 hover:shadow-xl flex-none h-full snap-center">
                            <img src={templ.URL(photo.File.URL)} alt="Post photo" class="h-full w-auto max-w-none object-cover">
                        </div>
                        }   
                    </div>
                    }
                    <div class="col-span-2">
                        <h1 class="text-3xl font-bold tracking-tight text-gray-900 mx-4">{post.Title}</h1>
                        <p class="text-sm text-gray-600 mx-4">{"last modified: " + post.UpdatedAt.Format("January 2, 2006")}</p>
                        
                        for _, tag := range post.Tags {
                            <span class="inline-flex items-center mx-1 rounded-full bg-green-50 mx-2 px-2 py-1 text-xs font-medium text-green-700 ring-1 ring-inset ring-green-600/20">
                                {tag}
                            </span>
                        }
                    </div>
                </div>
                <div class="border-l-4 rounded-lg border-emerald-600 pl-4 px-4 py-4 mx-4 my-4">
                    @WithPlantContent("text-md font-medium text-gray-900", "py-1", "text-emerald-800", post.Content.Text, plants)
                </div>
                if len(plants) > 0 {
                    <div class="mt-8 border-t border-gray-200 pt-8">
                        <h2 class="text-2xl font-bold tracking-tight text-gray-900">Plants mentioned in this post</h2>
                    </div>
                    <div class="grid grid-cols-1 mx-4 my-4 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-4">
                    for _, plnt := range plants {
                        <a href={templ.SafeURL("/view/plant/" + plnt.ID.String())} class="group">
                            <img src={plnt.MainPhoto.URL} alt="" class="aspect-square w-full rounded-lg bg-gray-200 object-cover group-hover:opacity-75 xl:aspect-7/8">
                            <p class="mt-1 text-lg font-medium text-gray-900">{plnt.LatinName}</p>
                            <h3 class="mt-4 text-sm text-justify text-gray-700">{plnt.Name}</h3>
                            <p class="mt-1 text-sm font-medium text-gray-900">{plnt.Category}</p>
                        </a>
                    }
                </div>
                }
                if usr.HasAuthorRights() {
                <div class="mt-8 border-t border-gray-200 pt-8">
                    <a href={templ.URL("/view/post/" + post.ID.String() + "/update")} class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-emerald-600 hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500">
                        Update Post Text
                    </a>
                </div>
                <div class="mt-8 border-t border-gray-200 pt-8">
                    <button id="delete-post-button" type="button" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                        Delete Post
                    </button>
                </div>
                }
            </main>
            <div id="delete-post-dialog" class="fixed hidden z-50 inset-0 bg-gray-900 bg-opacity-40 overflow-y-auto h-full w-full px-4">
                <div class="relative top-40 mx-auto shadow-xl rounded-md bg-white max-w-md">
                    <div class="flex shrink-0 items-center pb-4 text-xl font-medium text-slate-800">
                        Delete post?
                    </div>
                    <div class="relative border-t border-slate-200 py-4 leading-normal text-slate-600 font-light">
                        Do you really want to delete this post? This action cannot be undone.
                    </div>
                    <div class="flex shrink-0 flex-wrap items-center pt-4 justify-end">
                        <button id="delete-cancel-button" class="rounded-md border border-transparent py-2 px-4 text-center text-sm transition-all text-slate-600 hover:bg-slate-100 focus:bg-slate-100 active:bg-slate-100 disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none" type="button">
                            Cancel
                        </button>
                        <button id="delete-confirm-button" class="rounded-md bg-green-600 py-2 px-4 border border-transparent text-center text-sm text-white transition-all shadow-md hover:shadow-lg focus:bg-green-700 focus:shadow-none active:bg-green-700 hover:bg-green-700 active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none ml-2" type="button">
                            Confirm
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
}

templ PostCreate(usr auth.User) {
    @layout.Standard(usr) {
    <script src="/static/js/post/post-tag.js" type="module"></script>
    <script src="/static/js/post/create-listener.js" type="module"></script>
    <div class="max-w-md mx-auto">
        <div class="border-b border-gray-200 pt-6 pb-6">
            <h1 class="text-2xl font-bold tracking-tight text-gray-900">Create New Post</h1>
        </div>
        <form id="create-post-form" class="space-y-6 pt-6" enctype="multipart/form-data">
            <!-- Basic Info -->
            <div class="space-y-4">                
                <div>
                    <label for="title" class="block text-sm font-medium text-gray-700">Post Title</label>
                    <input type="text" id="title" name="title" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-500 focus:ring-emerald-500 sm:text-sm">
                </div>
                
                <div>
                    <label for="content" class="block text-sm font-medium text-gray-700">Post Content</label>
                    <textarea id="content" name="content" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-500 focus:ring-emerald-500 sm:text-sm"></textarea>
                </div>

                <div id="tags-container">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Tags</label>
                    <div id="tags-input-container" class="mt-6 grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-3">
                        <div class="transition-all duration-200 ease-out animate-in fade-in h-[42px]">
                            <button 
                                type="button"
                                id="create-tag-button"
                                class="w-full h-full flex items-center justify-center rounded-md border-2 border-dashed border-gray-300 hover:border-emerald-500 text-gray-400 hover:text-emerald-600 p-2 transition-all duration-200 hover:scale-[1.02]"
                                >
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5 mr-1">
                                    <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z" />
                                </svg>
                                Add Tag
                            </button>
                        </div>
                    </div>
                </div>
                <div>
                    <label for="photo" class="block text-sm font-medium text-gray-700">Post Photo</label>
                    <input type="file" id="photos" name="photos[]" accept="image/*" multiple required class="mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-emerald-50 file:text-emerald-700 hover:file:bg-emerald-100">
                </div>
                <button id="create-button" type="button" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-emerald-600 hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500">
                    Create Post
                </button>
            </div>
        </form>
    </div>
   }
}


templ PostUpdate(usr auth.User, post *searchservice.GetPost) {
    @layout.Standard(usr) {
        <script src="/static/js/post/post-tag.js" type="module"></script>
        <script src="/static/js/post/update-text-listener.js" type="module"></script>
        <div class="max-w-md mx-auto">
        <div class="border-b border-gray-200 pt-6 pb-6">
            <h1 class="text-2xl font-bold tracking-tight text-gray-900">Create New Post</h1>
        </div>
        <form id="update-post-form" class="space-y-6 pt-6" enctype="multipart/form-data">
            <!-- Basic Info -->
            <div class="space-y-4">                
                <div>
                    <label for="title" class="block text-sm font-medium text-gray-700">Post Title</label>
                    <input type="text" id="title" name="title" value={post.Title} required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-500 focus:ring-emerald-500 sm:text-sm">
                </div>
                
                <div>
                    <label for="content" class="block text-sm font-medium text-gray-700">Post Content</label>
                    <textarea id="content" name="content" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-500 focus:ring-emerald-500 sm:text-sm">{post.Content.Text}</textarea>
                </div>

                <div id="tags-container">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Tags</label>
                    <div id="tags-input-container" class="mt-6 grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-3">
                        for _, tag := range post.Tags {
                            <div class="relative transition-all duration-200 ease-out  animate-in fade-in relative group h-[42px]">
                                <input 
                                    type="text" 
                                    name="tags[]" 
                                    value={tag}
                                    class="block h-full w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-500 focus:ring-emerald-500 sm:text-sm pr-8 transition-all duration-200"
                                >
                                <button 
                                    type="button"
                                    class="delete-tag-button absolute right-1 top-1/2 -translate-y-1/2 text-gray-400 hover:text-emerald-600 transition-colors duration-200"
                                    >
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
                                        <path d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z" />
                                    </svg>
                                </button>
                            </div>
                        }
                        <div class="transition-all duration-200 ease-out animate-in fade-in h-[42px]">
                            <button 
                                type="button"
                                id="create-tag-button"
                                class="w-full h-full flex items-center justify-center rounded-md border-2 border-dashed border-gray-300 hover:border-emerald-500 text-gray-400 hover:text-emerald-600 p-2 transition-all duration-200 hover:scale-[1.02]"
                                >
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5 mr-1">
                                    <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z" />
                                </svg>
                                Add Tag
                            </button>
                        </div>
                    </div>
                </div>
                <button id="update-button" type="button" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-emerald-600 hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500">
                    Update Post
                </button>
            </div>
        </form>
    </div>
    }
}