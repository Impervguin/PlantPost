package components

import (
	"PlantSite/internal/models/auth"
	"PlantSite/internal/services/search-service"
	"PlantSite/internal/view/layout"
    "strings"
)

templ postFilterHeader(title string, name string) {
    <h3 class="-my-3 flow-root">
        <button type="button" class="filter-close-open flex w-full items-center justify-between bg-white py-3 text-sm text-gray-400 hover:text-gray-500" aria-controls={"filter-section-"+name} aria-expanded="false">
            <span class="font-medium text-gray-900">{title}</span>
            <span class="ml-6 flex items-center">
                <svg class="size-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
                    <path d="M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z" />
                </svg>
                <svg class="size-5 hidden" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
                    <path fill-rule="evenodd" d="M4 10a.75.75 0 0 1 .75-.75h10.5a.75.75 0 0 1 0 1.5H4.75A.75.75 0 0 1 4 10Z" clip-rule="evenodd" />
                </svg>
            </span>
        </button>
    </h3>
}

templ Posts(usr auth.User, posts []*searchservice.SearchPost, tags []string, authors []*auth.Author) {
    @layout.Standard(usr) {
        <script src="/static/js/posts/buttons.js" type="module"></script>
        <script src="/static/js/posts/listener.js" type="module"></script>
        <div class="bg-white">
            <div>
                <main class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
                    <div class="flex items-baseline justify-between border-b border-gray-200 pt-24 pb-6">
                        <h1 class="text-4xl font-bold tracking-tight text-gray-900">Posts</h1>
                    </div>
                    <section aria-labelledby="products-heading" class="pt-6 pb-24">

                        <div class="grid grid-cols-1 gap-x-8 gap-y-10 lg:grid-cols-4">
                            <!-- Filters -->
                            <form id="search-filters" class="hidden lg:block search-filters">
                                    <!-- Button to open/close filter section -->
                                    <div class="border-b border-gray-200 py-6">
                                        @postFilterHeader("Title", "title")
                                        <!-- Filter section -->
                                        <div class="pt-6 hidden" id="filter-section-title">
                                            <div class="space-y-4">
                                                <input
                                                    type="text"
                                                    name="title"
                                                    id="title"
                                                    value=""
                                                    class="block w-full rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-amber-600 sm:text-sm sm:leading-6"
                                                    />  
                                            </div>
                                        </div>
                                    </div>
                                    <div class="border-b border-gray-200 py-6">
                                        @postFilterHeader("Tags", "tags")
                                        <div id="filter-section-tags" class="max-h-60 overflow-y-auto hidden">
                                            for _, tag := range tags {
                                                <div class="flex gap-3">
                                                    <div class="flex h-5 shrink-0 items-center">
                                                        <div class="group grid size-4 grid-cols-1">
                                                            <input 
                                                                id={"tags-"+tag}
                                                                name="tags[]"
                                                                value={tag}
                                                                type="checkbox" 
                                                                class="col-start-1 row-start-1 appearance-none rounded-sm border border-gray-300 bg-white checked:border-amber-500 checked:bg-amber-500 indeterminate:border-amber-500 indeterminate:bg-amber-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-amber-500 disabled:border-gray-300 disabled:bg-gray-100 disabled:checked:bg-gray-100 forced-colors:appearance-auto"
                                                            />
                                                            <svg class="pointer-events-none col-start-1 row-start-1 size-3.5 self-center justify-self-center stroke-white group-has-disabled:stroke-gray-950/25" viewBox="0 0 14 14" fill="none">
                                                                <path class="opacity-0 group-has-checked:opacity-100" d="M3 8L6 11L11 3.5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                                <path class="opacity-0 group-has-indeterminate:opacity-100" d="M3 7H11" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                            </svg>
                                                        </div>
                                                    </div>
                                                    <label for={"tags-" + tag} class="text-sm text-gray-600">{tag}</label>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="border-b border-gray-200 py-6">
                                        @postFilterHeader("Authors", "author")
                                        <div id="filter-section-author" class="pt-6 hidden">
                                            <select id="author" name="author" required class="mt-1 py-2 px-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-amber-500 focus:ring-amber-500 sm:text-sm">
                                                <option value="">Select an author</option>
                                                for _, author := range authors {
                                                    <option value={author.ID().String()}>{author.Name()}</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                <div class="mt-4">
                                    <button 
                                        id="search-button" 
                                        type="button" 
                                        class="w-full rounded-md bg-amber-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-amber-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                                    >
                                        Search
                                    </button>
                                </div>
                                <div class="mt-4">
                                    <a 
                                        id="create-button"
                                        href="/view/post/create"
                                        class="w-full rounded-md bg-emerald-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-emerald-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                                    >
                                        Create
                                    </a>
                                </div>
                            </form>

                            <div class="lg:col-span-3">
                                for _, post := range posts {
                                    <div class="mx-6 my-4">
                                        <a href={templ.URL("/view/post/" + post.ID.String())} class="group">
                                            if len(post.Photos) > 0 {
                                                <img src={templ.URL(post.Photos[0].File.URL)} class="aspect-square w-full rounded-lg bg-gray-200 object-cover group-hover:opacity-75 xl:aspect-7/8">
                                            }
                                            <p class="mt-1 text-xs font-medium text-gray-600">{post.CreatedAt.Format("January 2, 2006")}</p>
                                            <h3 class="mt-1 text-lg font-medium text-gray-900">{post.Title}</h3>
                                            <p class="mt-4 text-sm text-gray-600 line-clamp-3">{post.Content.Text}</p>
                                            for _, tag := range post.Tags {
                                                <span class="inline-flex items-center mx-1 rounded-full bg-green-50 px-2 py-1 text-xs font-medium text-green-700 ring-1 ring-inset ring-green-600/20">
                                                    {tag}
                                                </span>
                                            }
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                    </section>
                </main>
            </div>
        </div>
    }
}

templ PostView(usr auth.User, post *searchservice.GetPost) {
    @layout.Standard(usr) {
        <div class="bg-white">
            <main class="mx-auto max-w-2xl px-4 py-16 sm:px-6 sm:py-24 lg:max-w-7xl lg:px-8">
                <div class="grid grid-cols-6">
                    if len(post.Photos) > 0 {
                    <div id="post-gallery" class="col-span-4 flex h-120 space-x-4 overflow-x-auto snap-x snap-mandatory w-full rounded-lg">
                        for _, photo := range post.Photos {
                        <div class="duration-300 ease-in-out hover:opacity-75 hover:scale-105 hover:shadow-xl flex-none h-full snap-center">
                            <img src={templ.URL(photo.File.URL)} alt="Post photo" class="h-full w-auto max-w-none object-cover">
                        </div>
                        }   
                    </div>
                    }
                    <div class="col-span-2">
                        <h1 class="text-3xl font-bold tracking-tight text-gray-900 mx-4">{post.Title}</h1>
                        <p class="text-sm text-gray-600 mx-4">{"last modified: " + post.UpdatedAt.Format("January 2, 2006")}</p>
                        
                        for _, tag := range post.Tags {
                            <span class="inline-flex items-center mx-1 rounded-full bg-green-50 mx-2 px-2 py-1 text-xs font-medium text-green-700 ring-1 ring-inset ring-green-600/20">
                                {tag}
                            </span>
                        }
                    </div>
                </div>
                <div class="border-l-4 rounded-lg border-emerald-600 pl-4 px-4 py-4 mx-4 my-4">
                    {{lines := strings.Split(post.Content.Text, "\n")}}
                    for _, line := range lines {
                        <p class="text-md font-medium text-gray-900 py-1">{line}</p>
                    }
                </div>

            </main>
        </div>
    }
}